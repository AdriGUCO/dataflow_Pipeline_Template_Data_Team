/* https://cloud.google.com/dataform/docs/tables */
/* https://cloud.google.com/dataform/docs/incremental-tables */
/* https://cloud.google.com/dataform/docs/document-tables */
/* https://cloud.google.com/dataform/docs/partitions-clusters */

config {
  type: "incremental",
  uniqueKey: ["timestamp"],
  description: "average ride length and amount hourly",
  schema: constants.DS_STAGING,
  name: "inc_historical_ride_lenght_and_amount",
  tags: ["bikeshare", "staging", "incremental"],
  // disabled: true, // Prevents Dataform from creating/compiling this table in BigQuery while keeps the table in the dependency graph.
  // dependencies: ["unreferenced_table"] // dependencies are tables that are not referenced in a ref function in the SELECT statement but needed to be executed before. 
  bigquery: {
    labels: {
      department: "data engineering",
      "query author": "Adria Guerrero", 
    },
    partitionBy: "DATE(INPUT_TS)",
    // requirePartitionFilter : true,
    updatePartitionFilter: `start_date >= ${constants.PARTITION_FILTER_FLUJO}` // set to only consider a subset of records and avoid Dataform scanning the whole table to find matching rows.
    // partitionExpirationDays: 14,
    // clusterBy: ["name", "revenue"]
  },
  columns: {
    INPUT_TS: "procesing time",
    timestamp: {
      description: "date",
      // bigqueryPolicyTags: ["projects/example-project/locations/us/taxonomies/123456789/policyTags/123456789"]
    },
    avg_duration_min: "average trip duration for this date and origin hour",
    trip_count: "number of trips per origin hour",
    /*
    record_name: {
      description: "Description of the record.",
      columns: {
       record_column1_name: "Description of the first record column",
       record_column2_name: "Description of the second record column",
      }
    } 
  */  
  }
  
}

pre_operations {  -- IF NEEDED: SQL operations to execute before the query 
                  -- https://cloud.google.com/dataform/docs/configure-execution#execute-sql-before-table
}

post_operations { -- IF NEEDED: SQL operations to execute after the query
                  -- https://cloud.google.com/dataform/docs/configure-execution#execute-sql-after-table
}

/* QUERY */
SELECT
  CURRENT_TIMESTAMP() AS INPUT_TS,
  TIMESTAMP_TRUNC (start_date, HOUR) AS timestamp,
  ROUND(AVG(duration_sec/60), 2) AS avg_duration_min,
  COUNT(*) AS trip_count
FROM
  ${ref(`stg_bikeshare_trips`)}
${when(incremental(), `WHERE start_date >= (SELECT TIMESTAMP_SUB(MAX(timestamp), interval 2 HOUR) FROM ${self()})`)}
-- ${when(incremental(), `WHERE start_date > ${constants.PARTITION_FILTER_DAILY}`)}
GROUP BY 
  timestamp

